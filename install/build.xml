<project name="rubedo" default="main" basedir="../.">
	<property file="./install/build.properties"/>
	<target name="prepare" depends="clean">
		<mkdir dir="${dir.output}"/>
		<mkdir dir="${dir.tmp}"/>
	</target>
	<target name="clean">
		<delete dir="${dir.output}"/>
	</target>
	<target name="phpcs">
		<mkdir dir="${phpcs.output.xml.dir}"/>
		<mkdir dir="${phpcs.output.html.dir}"/>
		<exec
		command="${phpcs.exec} ${phpcs.args}"
		dir="${project.basedir}"
		passthru="true"
		/>
		<xslt
		file="${phpcs.output.xml.file}"
		tofile="${phpcs.output.html.file}"
		style="${phpcs.style}"
		/>
	</target>
	<target name="phpmd">
		<mkdir dir="${phpmd.output.xml.dir}"/>
		<mkdir dir="${phpmd.output.html.dir}"/>
		<exec
		command="${phpmd.exec} ${phpmd.args}"
		dir="${project.basedir}"
		passthru="true"
		/>
		<xslt
		file="${phpmd.output.xml.file}"
		tofile="${phpmd.output.html.file}"
		style="${phpmd.style}"
		/>
	</target>
	<target name="phpcpd">
		<mkdir dir="${phpcpd.output.xml.dir}"/>
		<mkdir dir="${phpcpd.output.html.dir}"/>
		<exec
		command="${phpcpd.exec} ${phpcpd.args}"
		dir="${project.basedir}"
		passthru="true"
		/>
		<xslt
		file="${phpcpd.output.xml.file}"
		tofile="${phpcpd.output.html.file}"
		style="${phpcpd.style}"
		/>
	</target>
	<target name="phpdoc">
		<mkdir dir="${phpdoc.output.html.dir}"/>
		<exec
		command="${phpdoc.exec} ${phpdoc.args}"
		dir="${project.basedir}"
		passthru="true"
		/>
	</target>
	<target name="phpdepend">
		<mkdir dir="${phpdepend.output.xml.dir}"/>
		<mkdir dir="${phpdepend.output.html.dir}"/>
		<exec
		command="${phpdepend.exec} ${phpdepend.args}"
		dir="${project.basedir}"
		passthru="true"
		/>
		<xslt
		file="${phpdepend.output.xml.file}"
		tofile="${phpdepend.output.html.file}"
		style="${phpdepend.style}"
		/>
	</target>
	<target name="phpunit">
		<mkdir dir="${phpunit.output.xml.dir}"/>
		<mkdir dir="${phpunit.output.html.dir}"/>
		<exec
		command="phpunit  --colors --configuration ${project.basedir}/tests/phpunit.xml --log-junit ${phpunit.output.xml.file} --testdox-html ${phpunit.output.html.dir}/index.html"
		dir="${project.basedir}/tests"
		passthru="true"
		/>
		<xslt
		file="${phpunit.output.xml.file}"
		tofile="${junit.output.xml.file}"
		style="${junit.style}"
		/>
	</target>
	
	<target name="phpunitcoverage">
		<mkdir dir="${phpunit.output.xml.dir}"/>
		<mkdir dir="${phpunit.output.html.dir}"/>
		<exec
		command="phpunit  --colors --configuration ${project.basedir}/tests/phpunit.xml --coverage-html ${phpunit.output.xml.dir}/coverage/"
		dir="${project.basedir}/tests"
		passthru="true"
		/>
	</target>


	<!-- Pull Git Release -->
	<target name="git.pull">
		<gitpull repository="." source="origin" />
	</target>
	
	<target name="composer.update">
		<exec command="composer update" passthru="true"/>
	</target>
	
	<target name="composer.update-dev">
		<exec command="composer update --dev" passthru="true"/>
	</target>
	
	<target name="update" depends="git.pull,composer.update">
		<echo>Updated</echo>
	</target>
	
	<target name="update-dev" depends="git.pull,composer.update-dev">
		<echo>Updated</echo>
	</target>
	
	<target name="main">
		<echo>No default action</echo>
		<echo>To update, phing update</echo>
		<echo>To build report , phing report</echo>
		<echo>To run unit tests, phing phpunit</echo>
	</target>
	<target name="report" depends="prepare, phpcs, phpmd, phpdepend, phpcpd, phpdoc, phpunit,phpunitcoverage"/>
		
	<target name="restore-db">
		<exec
		command="mongorestore -d rubedo --drop rubedo"
		dir="${project.basedir}/data/dump"
		passthru="true"
		/>
	</target>
	
	<target name="dump-db">
		<exec
		command="mongodump -d rubedo"
		dir="${project.basedir}/data"
		passthru="true"
		/>
	</target>
	<target name="prepare-cache" depends="">
		<mkdir dir="${project.basedir}/cache"/>
		
		<mkdir dir="${project.basedir}/cache/twig"/>
		<mkdir dir="${project.basedir}/cache/htmlpurifier"/>
		<mkdir dir="${project.basedir}/cache/zend"/>
		
		<chmod file="${project.basedir}/cache" mode="777"/>
		<chmod file="${project.basedir}/cache/twig" mode="777"/>
		<chmod file="${project.basedir}/cache/htmlpurifier" mode="777"/>
		<chmod file="${project.basedir}/cache/zend" mode="777"/>
	</target>
</project>
